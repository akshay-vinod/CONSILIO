{"version":3,"sources":["components/Nav.js","components/District.js","components/Print.js","components/LineChart.js","App.js","index.js"],"names":["Nav","className","class","style","color","href","District","sList","dList","load","setStateQuery","setDistrictQuery","setStateNameQuery","useState","input","setInput","district","setDistrict","useEffect","stateCode","statecode","toLowerCase","value","onChange","e","target","Object","keys","map","item","Print","districtD","selectedS","selectedD","Sdate","selectedSN","SdateData","stateData","setStateData","loading","setLoading","a","toUpperCase","axios","get","response","fullData","data","districtList","districts","stateDateList","stateDateData","objState","dates","lengthState","length","i","push","fetchItem","delta","console","log","objDistrict","lengthDistrict","j","arrState","status","confirmed","increase","icon","recovered","deceased","fetchItems","index","itemData","undefined","LineChart","stateD","stateDateD","Confirmed","Recovered","labels","datasets","label","fill","borderColor","tension","height","options","maintainAspectRatio","App","statesData","setStatesData","districtData","setDistrictData","selectedState","setSelectedState","selectedStateName","setSelectedStateName","selectedDistrict","setSelectedDistrict","setStateDateList","setStateDateData","q","d","n","dd","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57491f41.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Nav.css\";\r\nconst Nav = () => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      {/* <header>\r\n        <nav>\r\n          <div className=\"logo\">\r\n            <a>COVID UPDATES</a>\r\n          </div>\r\n        </nav>\r\n      </header> */}\r\n      <h2>Covid19</h2>\r\n      <ul className=\"nav-links\">\r\n        <li>\r\n          <button className=\"btn\">\r\n            <i class=\"bi bi-grid-1x2-fill\" style={{ color: \"#ffff\" }}></i>\r\n            <a href=\"#\">Dashboard</a>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./District.css\";\r\nconst District = ({\r\n  sList,\r\n  dList,\r\n  load,\r\n  setStateQuery,\r\n  setDistrictQuery,\r\n  setStateNameQuery,\r\n}) => {\r\n  const [input, setInput] = useState(\"Kerala\");\r\n  const [district, setDistrict] = useState(\"Select District\");\r\n  useEffect(() => {\r\n    if (!load) {\r\n      var stateCode = sList[input].statecode;\r\n      setStateQuery(stateCode.toLowerCase());\r\n    }\r\n    setStateNameQuery(input);\r\n    setDistrictQuery(district);\r\n  }, [\r\n    input,\r\n    setStateQuery,\r\n    district,\r\n    setDistrictQuery,\r\n    sList,\r\n    load,\r\n    setStateNameQuery,\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"district\">\r\n      <div className=\"\">\r\n        <h2>Overview : {district === \"Select District\" ? input : district}</h2>\r\n      </div>\r\n      <div className=\"selectors\">\r\n        <div className=\"select\">\r\n          {load ? (\r\n            \"\"\r\n          ) : (\r\n            <select\r\n              value={input}\r\n              onChange={(e) => {\r\n                setInput(e.target.value);\r\n                setDistrict(\"Select District\");\r\n              }}\r\n            >\r\n              {Object.keys(sList).map((item) => {\r\n                if (item !== \"State Unassigned\") {\r\n                  return (\r\n                    <option key={item} value={item}>\r\n                      {item}\r\n                    </option>\r\n                  );\r\n                } else return \"\";\r\n              })}\r\n            </select>\r\n          )}\r\n        </div>\r\n        <div className=\"select\">\r\n          {load ? (\r\n            \"\"\r\n          ) : (\r\n            <select\r\n              value={district}\r\n              onChange={(e) => setDistrict(e.target.value)}\r\n            >\r\n              <option value=\"Select District\">Select District</option>\r\n              {Object.keys(dList).map((item) => {\r\n                if (item !== \"Other State\" && item !== \"Unknown\") {\r\n                  return (\r\n                    <option key={item} value={item}>\r\n                      {item}\r\n                    </option>\r\n                  );\r\n                } else {\r\n                  return \"\";\r\n                }\r\n              })}\r\n            </select>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default District;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Print.css\";\r\n// const request = require(\"request\");\r\n// const csv = require(\"csvtojson\");\r\n\r\nconst Print = ({\r\n  load,\r\n  districtD,\r\n  selectedS,\r\n  selectedD,\r\n  selectedSN,\r\n  Sdate,\r\n  SdateData,\r\n}) => {\r\n  const [stateData, setStateData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchItems = async () => {\r\n      //setLoading(true);\r\n      var stateCode = selectedS.toUpperCase();\r\n      const response = await axios.get(\r\n        `https://api.covid19india.org/v4/min/timeseries-${stateCode}.min.json`\r\n      );\r\n      var fullData = response.data[stateCode];\r\n      const districtList = fullData.districts;\r\n      districtD(districtList);\r\n      var stateDateList = [];\r\n      var stateDateData = [];\r\n      if (selectedD === \"Select District\") {\r\n        var objState = fullData.dates;\r\n        // console.log(objState);\r\n        var lengthState = Object.keys(objState).length;\r\n        stateDateList = [];\r\n        stateDateData = [];\r\n        for (var i = lengthState - 7; i < lengthState; i++) {\r\n          stateDateList.push(Object.keys(objState)[i]);\r\n        }\r\n        stateDateList.map((fetchItem) =>\r\n          stateDateData.push(objState[fetchItem].delta)\r\n        );\r\n        Sdate([...stateDateList]);\r\n        SdateData([...stateDateData]);\r\n        // console.log(stateDateList);\r\n      } else {\r\n        console.log(selectedS, fullData);\r\n        var objDistrict = fullData.districts[selectedD].dates;\r\n        var lengthDistrict = Object.keys(objDistrict).length;\r\n        stateDateList = [];\r\n        stateDateData = [];\r\n        for (var j = lengthDistrict - 7; j < lengthDistrict; j++) {\r\n          stateDateList.push(Object.keys(objDistrict)[j]);\r\n        }\r\n        stateDateList.map((item) =>\r\n          stateDateData.push(objDistrict[item].delta)\r\n        );\r\n        Sdate([...stateDateList]);\r\n        SdateData([...stateDateData]);\r\n      }\r\n      var arrState = [\r\n        {\r\n          status: \"Confirmed\",\r\n          data: stateDateData[6].confirmed,\r\n          increase: stateDateData[6].confirmed - stateDateData[5].confirmed,\r\n          icon: \"fas fa-hospital-user\",\r\n        },\r\n\r\n        {\r\n          status: \"Recovered\",\r\n          data: stateDateData[6].recovered,\r\n          increase: stateDateData[6].recovered - stateDateData[5].recovered,\r\n          icon: \"bi bi-heart-fill\",\r\n        },\r\n        {\r\n          status: \"Deceased\",\r\n          data: stateDateData[6].deceased,\r\n          increase: stateDateData[6].deceased - stateDateData[5].deceased,\r\n          icon: \"bi bi-x-octagon-fill\",\r\n        },\r\n      ];\r\n      setStateData([...arrState]);\r\n      setLoading(false);\r\n    };\r\n    fetchItems();\r\n  }, [selectedS, selectedD]);\r\n  return (\r\n    <div className=\"cards\">\r\n      {loading || load\r\n        ? \"Loading..\"\r\n        : stateData.map((item, index) => {\r\n            var itemData = \"-\";\r\n            if (item.data !== undefined) {\r\n              itemData = item.data;\r\n            }\r\n            return (\r\n              <div className=\"card\" key={index}>\r\n                <div className=\"icon\">\r\n                  <i className={item.icon} style={{ color: \"#ffff\" }}></i>\r\n                </div>\r\n                <div>\r\n                  <h4>{item.status}</h4>\r\n                  <p>{itemData}</p>\r\n                  <br />\r\n                  <p>{itemData === \"-\" ? \"-\" : item.increase}</p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Print;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"./LineChart.css\";\r\nconst LineChart = ({ stateD, stateDateD }) => {\r\n  var Confirmed = [];\r\n  var Recovered = [];\r\n\r\n  stateDateD.map((item) => {\r\n    if (item !== undefined) {\r\n      if (\"confirmed\" in item) Confirmed.push(item.confirmed);\r\n      if (\"recovered\" in item) Recovered.push(item.recovered);\r\n    }\r\n  });\r\n  const data = {\r\n    labels: [...stateD],\r\n    datasets: [\r\n      {\r\n        label: \"Confirmed\",\r\n        data: Confirmed,\r\n        fill: false,\r\n        borderColor: \"rgb(255, 7, 58)\",\r\n        tension: 0.1,\r\n      },\r\n      {\r\n        label: \"Recovered\",\r\n        data: Recovered,\r\n        fill: false,\r\n        borderColor: \"rgb(40, 167, 69)\",\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div className=\"chart\">\r\n      <Line data={data} height={300} options={{ maintainAspectRatio: false }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport District from \"./components/District\";\nimport Print from \"./components/Print\";\nimport Chart from \"./components/LineChart\";\nimport axios from \"axios\";\nfunction App() {\n  const [statesData, setStatesData] = useState({});\n  const [districtData, setDistrictData] = useState({});\n  const [selectedState, setSelectedState] = useState(\"kl\");\n  const [selectedStateName, setSelectedStateName] = useState(\"Kerala\");\n  const [selectedDistrict, setSelectedDistrict] = useState(\"Select District\");\n  const [stateDateList, setStateDateList] = useState([]);\n  const [stateDateData, setStateDateData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchItems = async () => {\n      const response = await axios.get(\n        \"https://api.covid19india.org/state_district_wise.json\"\n      );\n      await setStatesData(response.data);\n      setLoading(false);\n    };\n    fetchItems();\n  }, [selectedState]);\n  return (\n    <div className=\"App\">\n      <Nav />\n      <div className=\"overview\">\n        <District\n          sList={statesData}\n          dList={districtData}\n          load={loading}\n          setStateQuery={(q) => setSelectedState(q)}\n          setDistrictQuery={(d) => setSelectedDistrict(d)}\n          setStateNameQuery={(n) => setSelectedStateName(n)}\n        />\n        <Print\n          load={loading}\n          sList={statesData}\n          selectedS={selectedState}\n          selectedSN={selectedStateName}\n          selectedD={selectedDistrict}\n          Sdate={(d) => setStateDateList(d)}\n          SdateData={(data) => setStateDateData(data)}\n          districtD={(dd) => setDistrictData(dd)}\n        />\n        <Chart stateD={stateDateList} stateDateD={stateDateData} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}