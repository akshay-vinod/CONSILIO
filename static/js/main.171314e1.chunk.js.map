{"version":3,"sources":["components/Nav.js","components/District.js","components/Print.js","components/LineChart.js","App.js","index.js"],"names":["Nav","className","style","color","href","title","rel","target","alt","src","District","sList","dList","load","loadApi","setStateQuery","setDistrictQuery","setChartDisplay","useState","input","setInput","district","setDistrict","display","setDisplay","useEffect","stateCode","statecode","value","onChange","e","Object","keys","map","item","Print","fullSData","selectedS","selectedD","Sdate","SdateData","chartLabel","chartData","stateData","setStateData","latestDate","setLatestDate","a","fullData","stateDateList","stateDateData","objState","dates","lengthState","length","i","push","fetchItem","delta","objDistrict","districts","lengthDistrict","j","currentObj","confirmed","undefined","recovered","deceased","prevObj","Confirmed","Recovered","Deceased","status","data","increase","icon","arr","fetchItems","index","itemData","Math","abs","canvas","gradient","getContext","createLinearGradient","addColorStop","labels","datasets","fill","backgroundColor","borderColor","tension","pointRadius","pointBackgroundColor","options","maintainAspectRatio","plugins","legend","scales","x","grid","ticks","y","LineChart","stateD","stateDateD","dData","DistrictName","DistrictValue","dataDistrict","districtDate","name","sort","b","label","dataDoughnut","hoverOffset","height","position","align","text","font","family","size","weight","padding","top","bottom","App","statesData","setStatesData","fullStateData","setFullStateData","districtData","setDistrictData","selectedState","setSelectedState","selectedDistrict","setSelectedDistrict","setStateDateList","setStateDateData","loading","setLoading","apiLoading","setApiLoading","axios","get","responseApi1","responseApi2","districtList","setTimeout","q","d","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.171314e1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./css/Nav.css\";\r\nconst Nav = () => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      {/* <header>\r\n        <nav>\r\n          <div className=\"logo\">\r\n            <a>COVID UPDATES</a>\r\n          </div>\r\n        </nav>\r\n      </header> */}\r\n      <h2>Covid19.</h2>\r\n      <ul className=\"nav-links\">\r\n        <li>\r\n          <button className=\"btn\">\r\n            <i className=\"bi bi-grid-1x2-fill\" style={{ color: \"#ffff\" }}></i>\r\n            <a href=\"https://akshay-vinod.github.io/CONSILIO/\">Dashboard</a>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n      <a\r\n        title=\"Buy me a coffee\"\r\n        href=\"https://www.buymeacoffee.com/akshayvinod\"\r\n        rel=\"noreferrer\"\r\n        target=\"_blank\"\r\n      >\r\n        <img\r\n          alt=\"Buy me a coffee\"\r\n          src=\"https://cdn.dribbble.com/users/3349322/screenshots/14039201/media/616e4ae6995fb288e434c3f0927541ce.png\"\r\n        />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./css/District.css\";\r\nconst District = ({\r\n  sList,\r\n  dList,\r\n  load,\r\n  loadApi,\r\n  setStateQuery,\r\n  setDistrictQuery,\r\n  setChartDisplay,\r\n}) => {\r\n  const [input, setInput] = useState(\"Kerala\");\r\n  const [district, setDistrict] = useState(\"Select District\");\r\n  const [display, setDisplay] = useState(\"Kerala\");\r\n  useEffect(() => {\r\n    if (!loadApi) {\r\n      var stateCode = sList[input].statecode;\r\n      setStateQuery(stateCode);\r\n    }\r\n\r\n    setDistrictQuery(district);\r\n    if (district !== \"Select District\") setDisplay(district);\r\n    setChartDisplay(display);\r\n  }, [input, setStateQuery, district, setDistrictQuery, loadApi, load]);\r\n\r\n  return (\r\n    <div className=\"district\">\r\n      <div className=\"\">\r\n        <h2>\r\n          Overview :{\" \"}\r\n          <span>{district === \"Select District\" ? input : district}</span>\r\n        </h2>\r\n      </div>\r\n      <div className=\"selectors\">\r\n        <div className=\"select\">\r\n          {loadApi ? (\r\n            \"\"\r\n          ) : (\r\n            <select\r\n              value={input}\r\n              onChange={(e) => {\r\n                setInput(e.target.value);\r\n                setDistrict(\"Select District\");\r\n                setDisplay(e.target.value);\r\n              }}\r\n            >\r\n              {Object.keys(sList).map((item) => {\r\n                if (item !== \"State Unassigned\") {\r\n                  return (\r\n                    <option key={item} value={item}>\r\n                      {item}\r\n                    </option>\r\n                  );\r\n                } else return \"\";\r\n              })}\r\n            </select>\r\n          )}\r\n        </div>\r\n        <div className=\"select\">\r\n          {loadApi ? (\r\n            \"\"\r\n          ) : (\r\n            <select\r\n              value={district}\r\n              onChange={(e) => setDistrict(e.target.value)}\r\n            >\r\n              <option value=\"Select District\">Select District</option>\r\n              {Object.keys(dList).map((item) => {\r\n                if (item !== \"Other State\" && item !== \"Unknown\") {\r\n                  return (\r\n                    <option key={item} value={item}>\r\n                      {item}\r\n                    </option>\r\n                  );\r\n                } else {\r\n                  return \"\";\r\n                }\r\n              })}\r\n            </select>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default District;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"./css/Print.css\";\r\n// const request = require(\"request\");\r\n// const csv = require(\"csvtojson\");\r\n\r\nconst Print = ({\r\n  fullSData,\r\n  load,\r\n  selectedS,\r\n  selectedD,\r\n  Sdate,\r\n  SdateData,\r\n  chartLabel,\r\n  chartData,\r\n}) => {\r\n  const [stateData, setStateData] = useState([]);\r\n  const [latestDate, setLatestDate] = useState(\"\");\r\n  // console.log(chartData);\r\n  useEffect(() => {\r\n    const fetchItems = async () => {\r\n      var fullData = fullSData;\r\n      // const districtList = await fullData.districts;\r\n      // districtD(districtList);\r\n      var stateDateList = [];\r\n      var stateDateData = [];\r\n      if (selectedD === \"Select District\") {\r\n        var objState = fullData.dates;\r\n        // console.log(objState);\r\n        var lengthState = Object.keys(objState).length;\r\n        stateDateList = [];\r\n        stateDateData = [];\r\n        for (var i = lengthState - 7; i < lengthState; i++) {\r\n          stateDateList.push(Object.keys(objState)[i]);\r\n        }\r\n        setLatestDate(stateDateList[6]);\r\n        stateDateList.map((fetchItem) =>\r\n          stateDateData.push(objState[fetchItem].delta)\r\n        );\r\n        Sdate([...stateDateList]);\r\n        SdateData([...stateDateData]);\r\n        // console.log(stateDateList);\r\n      } else {\r\n        var objDistrict = fullData.districts[selectedD].dates;\r\n        var lengthDistrict = Object.keys(objDistrict).length;\r\n        stateDateList = [];\r\n        stateDateData = [];\r\n        for (var j = lengthDistrict - 7; j < lengthDistrict; j++) {\r\n          stateDateList.push(Object.keys(objDistrict)[j]);\r\n        }\r\n        stateDateList.map((item) =>\r\n          stateDateData.push(objDistrict[item].delta)\r\n        );\r\n        Sdate([...stateDateList]);\r\n        SdateData([...stateDateData]);\r\n        // console.log(stateDateData);\r\n      }\r\n      var currentObj = {\r\n        confirmed:\r\n          stateDateData[6] !== undefined\r\n            ? stateDateData[6].confirmed\r\n            : undefined,\r\n        recovered:\r\n          stateDateData[6] !== undefined\r\n            ? stateDateData[6].recovered\r\n            : undefined,\r\n        deceased:\r\n          stateDateData[6] !== undefined\r\n            ? stateDateData[6].deceased\r\n            : undefined,\r\n      };\r\n      var prevObj = {\r\n        confirmed:\r\n          stateDateData[5] !== undefined\r\n            ? stateDateData[5].confirmed\r\n            : undefined,\r\n        recovered:\r\n          stateDateData[5] !== undefined\r\n            ? stateDateData[5].recovered\r\n            : undefined,\r\n        deceased:\r\n          stateDateData[5] !== undefined\r\n            ? stateDateData[5].deceased\r\n            : undefined,\r\n      };\r\n      // console.log(stateDateData[6]);\r\n      var Confirmed = [];\r\n      var Recovered = [];\r\n      var Deceased = [];\r\n      stateDateData.map((item) => {\r\n        if (item !== undefined) {\r\n          if (\"confirmed\" in item) Confirmed.push(item.confirmed);\r\n          if (\"recovered\" in item) Recovered.push(item.recovered);\r\n          if (\"deceased\" in item) Deceased.push(item.deceased);\r\n        }\r\n        return \"\";\r\n      });\r\n      var arrState = [\r\n        {\r\n          status: \"Confirmed\",\r\n          data: currentObj.confirmed,\r\n          increase:\r\n            (currentObj.confirmed === undefined ? 0 : currentObj.confirmed) -\r\n            (prevObj.confirmed === undefined ? 0 : prevObj.confirmed),\r\n          icon: \"fas fa-hospital-user\",\r\n          arr: Confirmed,\r\n          color: \"rgb(255, 77, 77\",\r\n        },\r\n\r\n        {\r\n          status: \"Recovered\",\r\n          data: currentObj.recovered,\r\n          increase:\r\n            (currentObj.recovered === undefined ? 0 : currentObj.recovered) -\r\n            (prevObj.recovered === undefined ? 0 : prevObj.recovered),\r\n          icon: \"bi bi-heart-fill\",\r\n          arr: Recovered,\r\n          color: \"rgb(0, 255, 0\",\r\n        },\r\n        {\r\n          status: \"Deceased\",\r\n          data: currentObj.deceased,\r\n          increase:\r\n            (currentObj.deceased === undefined ? 0 : currentObj.deceased) -\r\n            (prevObj.deceased === undefined ? 0 : prevObj.deceased),\r\n          icon: \"bi bi-x-octagon-fill\",\r\n          arr: Deceased,\r\n          color: \"rgb(160, 164, 171\",\r\n        },\r\n      ];\r\n      setStateData([...arrState]);\r\n    };\r\n    if (!load) fetchItems();\r\n  }, [selectedS, selectedD]);\r\n\r\n  return (\r\n    <div className=\"cards\">\r\n      {load\r\n        ? \"\"\r\n        : stateData.map((item, index) => {\r\n            var itemData = \"-\";\r\n            if (item.data !== undefined) {\r\n              itemData = item.data;\r\n            }\r\n            return (\r\n              <div className=\"card\" key={index}>\r\n                <div className=\"content\">\r\n                  <div className=\"icon\">\r\n                    <i className={item.icon} style={{ color: \"#edf0f5\" }}></i>\r\n                  </div>\r\n                  <div className=\"count\">\r\n                    <p>{item.status}</p>\r\n                    <h1>{itemData}</h1>\r\n                    <br />\r\n                  </div>\r\n                </div>\r\n                <div className=\"change\">\r\n                  <div className=\"increase\">\r\n                    <i\r\n                      className={\r\n                        item.status !== \"Recovered\"\r\n                          ? item.increase > 0\r\n                            ? \"bi bi-arrow-up red\"\r\n                            : \"bi bi-arrow-down green\"\r\n                          : item.increase > 0\r\n                          ? \"bi bi-arrow-up green\"\r\n                          : \"bi bi-arrow-down red\"\r\n                      }\r\n                    ></i>\r\n                    <p>{itemData === \"-\" ? \"-\" : Math.abs(item.increase)}</p>\r\n                  </div>\r\n\r\n                  <p>{latestDate}</p>\r\n                  <div className=\"noChart\">\r\n                    <Line\r\n                      data={(canvas) => {\r\n                        const ctx = canvas.getContext(\"2d\");\r\n                        const gradient = ctx.createLinearGradient(0, 0, 0, 80);\r\n                        gradient.addColorStop(0, `${item.color + \",1)\"}`);\r\n                        gradient.addColorStop(1, `${item.color + \",0)\"}`);\r\n                        return {\r\n                          labels: [...chartLabel],\r\n                          datasets: [\r\n                            {\r\n                              data: item.arr,\r\n                              fill: true,\r\n                              backgroundColor: gradient,\r\n                              borderColor: `${item.color + \",0.3)\"}`,\r\n                              tension: 0.4,\r\n                              pointRadius: [0, 0, 0, 0, 0, 0, 5],\r\n                              pointBackgroundColor: \"#fff\",\r\n                            },\r\n                          ],\r\n                        };\r\n                      }}\r\n                      options={{\r\n                        maintainAspectRatio: false,\r\n                        plugins: {\r\n                          legend: {\r\n                            display: false,\r\n                          },\r\n                        },\r\n                        // elements: {\r\n                        //   point: {\r\n                        //     radius: 0,\r\n                        //   },\r\n                        // },\r\n                        scales: {\r\n                          x: {\r\n                            display: false,\r\n                            grid: {\r\n                              display: false,\r\n                            },\r\n                            ticks: {\r\n                              display: false,\r\n                            },\r\n                          },\r\n                          y: {\r\n                            display: false,\r\n                            grid: {\r\n                              display: false,\r\n                            },\r\n                            ticks: {\r\n                              display: false,\r\n                            },\r\n                          },\r\n                        },\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Print;\r\n","import React from \"react\";\r\nimport { Line, Doughnut } from \"react-chartjs-2\";\r\nimport \"./css/LineChart.css\";\r\nconst LineChart = ({ stateD, stateDateD, dData, title }) => {\r\n  var Confirmed = [];\r\n  var Recovered = [];\r\n  var Deceased = [];\r\n  var DistrictName = [];\r\n  var DistrictValue = [];\r\n  var dataDistrict = [];\r\n  Object.keys(dData).map((item) => {\r\n    if (item !== \"Unknown\") {\r\n      var lengthDistrict = Object.keys(dData[item].dates).length;\r\n      var districtDate = Object.keys(dData[item].dates)[lengthDistrict - 1];\r\n      dataDistrict.push({\r\n        name: item,\r\n        value: dData[item].dates[districtDate].delta.confirmed,\r\n      });\r\n    }\r\n    return \"\";\r\n  });\r\n  dataDistrict.sort((a, b) => {\r\n    return b.value - a.value;\r\n  });\r\n  // console.log(dataDistrict);\r\n  for (var j = 0; j < 5; j++) {\r\n    if (dataDistrict[j] !== undefined) {\r\n      DistrictName.push(dataDistrict[j].name);\r\n      DistrictValue.push(dataDistrict[j].value);\r\n    }\r\n  }\r\n  stateDateD.map((item) => {\r\n    if (item !== undefined) {\r\n      if (\"confirmed\" in item) Confirmed.push(item.confirmed);\r\n      if (\"recovered\" in item) Recovered.push(item.recovered);\r\n      if (\"deceased\" in item) Deceased.push(item.deceased);\r\n    }\r\n    return \"\";\r\n  });\r\n  const data = {\r\n    labels: [...stateD],\r\n    datasets: [\r\n      {\r\n        label: \"Confirmed\",\r\n        data: Confirmed,\r\n        fill: false,\r\n        borderColor: \"rgb(255, 7, 58)\",\r\n        backgroundColor: \"rgb(255, 7, 58)\",\r\n        tension: 0.1,\r\n      },\r\n      {\r\n        label: \"Recovered\",\r\n        data: Recovered,\r\n        fill: false,\r\n        borderColor: \"rgb(40, 167, 69)\",\r\n        backgroundColor: \"rgb(40, 167, 69)\",\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  };\r\n  const dataDoughnut = {\r\n    labels: DistrictName,\r\n    datasets: [\r\n      {\r\n        label: \"My First Dataset\",\r\n        data: DistrictValue,\r\n        backgroundColor: [\r\n          \"rgb(218,25,83)\",\r\n          \"rgb(15,189,168)\",\r\n          \"rgb(254,184,92)\",\r\n          \"rgb(100,138,225)\",\r\n          \"rgb(108, 117, 125)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgb(218,25,83)\",\r\n          \"rgb(15,189,168)\",\r\n          \"rgb(254,184,92)\",\r\n          \"rgb(100,138,225)\",\r\n          \"rgb(108, 117, 125)\",\r\n        ],\r\n        hoverOffset: 4,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div className=\"LineChart\">\r\n      <div className=\"chart\">\r\n        <Line\r\n          data={data}\r\n          height={300}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n            plugins: {\r\n              legend: {\r\n                position: \"bottom\",\r\n              },\r\n              title: {\r\n                display: true,\r\n                align: \"start\",\r\n                text: `Cumulative Summary of ${title}`,\r\n                color: \"#ffff\",\r\n                font: {\r\n                  family: \"Montserrat\",\r\n                  size: 21,\r\n                  weight: \"normal\",\r\n                },\r\n                padding: { top: 10, bottom: 20 },\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"coffee\">\r\n        <div className=\"chart\">\r\n          <Doughnut\r\n            data={dataDoughnut}\r\n            height={100}\r\n            options={{\r\n              maintainAspectRatio: false,\r\n              plugins: {\r\n                legend: {\r\n                  position: \"right\",\r\n                  title: {\r\n                    display: true,\r\n                    text: `On ${stateD[6]}`,\r\n                  },\r\n                },\r\n                title: {\r\n                  display: true,\r\n                  align: \"start\",\r\n                  text: `Top districts(Confirmed Case) `,\r\n                  color: \"#ffff\",\r\n                  font: {\r\n                    family: \"Montserrat\",\r\n                    size: 21,\r\n                    weight: \"normal\",\r\n                  },\r\n                  padding: { top: 10, bottom: 20 },\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Nav from \"./components/Nav\";\r\nimport District from \"./components/District\";\r\nimport Print from \"./components/Print\";\r\nimport Chart from \"./components/LineChart\";\r\nimport axios from \"axios\";\r\nfunction App() {\r\n  const [statesData, setStatesData] = useState({});\r\n  const [fullStateData, setFullStateData] = useState({});\r\n  const [districtData, setDistrictData] = useState({});\r\n  const [selectedState, setSelectedState] = useState(\"KL\");\r\n  const [selectedDistrict, setSelectedDistrict] = useState(\"Select District\");\r\n  const [stateDateList, setStateDateList] = useState([]);\r\n  const [stateDateData, setStateDateData] = useState([]);\r\n  const [display, setDisplay] = useState(\"Kerala\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [apiLoading, setApiLoading] = useState(true);\r\n  useEffect(() => {\r\n    const fetchItems = async () => {\r\n      setApiLoading(true);\r\n      const responseApi1 = await axios.get(\r\n        \"https://api.covid19india.org/state_district_wise.json\"\r\n      );\r\n      await setStatesData(responseApi1.data);\r\n      setApiLoading(false);\r\n    };\r\n    fetchItems();\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchItems = async () => {\r\n      setLoading(true);\r\n      const responseApi2 = await axios.get(\r\n        `https://api.covid19india.org/v4/min/timeseries-${selectedState}.min.json`\r\n      );\r\n      const districtList = await responseApi2.data[selectedState].districts;\r\n      // console.log(responseApi2.data.selectedState);\r\n      await setDistrictData(districtList);\r\n      await setFullStateData(responseApi2.data[selectedState]);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 1000);\r\n    };\r\n    fetchItems();\r\n  }, [selectedState]);\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav />\r\n      <div className=\"overview\">\r\n        <District\r\n          sList={statesData}\r\n          dList={districtData}\r\n          load={loading}\r\n          loadApi={apiLoading}\r\n          setStateQuery={(q) => setSelectedState(q)}\r\n          setDistrictQuery={(d) => setSelectedDistrict(d)}\r\n          setChartDisplay={(data) => setDisplay(data)}\r\n        />\r\n        {!loading ? (\r\n          <>\r\n            <Print\r\n              load={loading}\r\n              selectedS={selectedState}\r\n              selectedD={selectedDistrict}\r\n              fullSData={fullStateData}\r\n              chartLabel={stateDateList}\r\n              chartData={stateDateData}\r\n              Sdate={(d) => setStateDateList(d)}\r\n              SdateData={(data) => setStateDateData(data)}\r\n              // districtD={(dd) => setDistrictData(dd)}\r\n            />\r\n            <Chart\r\n              dData={districtData}\r\n              stateD={stateDateList}\r\n              stateDateD={stateDateData}\r\n              title={display}\r\n            />\r\n          </>\r\n        ) : (\r\n          <div className=\"bars-1\"></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}