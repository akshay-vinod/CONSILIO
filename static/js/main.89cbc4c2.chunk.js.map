{"version":3,"sources":["components/Nav.js","components/District.js","components/Print.js","components/LineChart.js","App.js","index.js"],"names":["Nav","className","style","color","href","title","target","alt","src","District","sList","dList","load","loadApi","setStateQuery","setDistrictQuery","setChartDisplay","useState","input","setInput","district","setDistrict","display","setDisplay","useEffect","stateCode","statecode","value","onChange","e","Object","keys","map","item","Print","fullSData","selectedS","selectedD","Sdate","SdateData","stateData","setStateData","a","fullData","stateDateList","stateDateData","objState","dates","lengthState","length","i","push","fetchItem","delta","objDistrict","districts","lengthDistrict","j","arrState","status","data","confirmed","increase","icon","recovered","deceased","fetchItems","index","itemData","undefined","LineChart","stateD","stateDateD","dData","Confirmed","Recovered","DistrictName","DistrictValue","dataDistrict","districtDate","name","sort","b","console","log","labels","datasets","label","fill","borderColor","backgroundColor","tension","dataDoughnut","hoverOffset","height","options","maintainAspectRatio","plugins","align","text","font","size","weight","App","statesData","setStatesData","fullStateData","setFullStateData","districtData","setDistrictData","selectedState","setSelectedState","selectedDistrict","setSelectedDistrict","setStateDateList","setStateDateData","loading","setLoading","apiLoading","setApiLoading","axios","get","responseApi1","responseApi2","districtList","setTimeout","q","d","class","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89cbc4c2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Nav.css\";\r\nconst Nav = () => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      {/* <header>\r\n        <nav>\r\n          <div className=\"logo\">\r\n            <a>COVID UPDATES</a>\r\n          </div>\r\n        </nav>\r\n      </header> */}\r\n      <h2>Covid19.</h2>\r\n      <ul className=\"nav-links\">\r\n        <li>\r\n          <button className=\"btn\">\r\n            <i className=\"bi bi-grid-1x2-fill\" style={{ color: \"#ffff\" }}></i>\r\n            <a href=\"#\">Dashboard</a>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n      <a\r\n        title=\"Buy me a coffee\"\r\n        href=\"https://www.buymeacoffee.com/akshayvinod\"\r\n        target=\"_blank\"\r\n      >\r\n        <img\r\n          alt=\"Buy me a coffee\"\r\n          src=\"https://cdn.dribbble.com/users/3349322/screenshots/14039201/media/616e4ae6995fb288e434c3f0927541ce.png\"\r\n        />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./District.css\";\r\nconst District = ({\r\n  sList,\r\n  dList,\r\n  load,\r\n  loadApi,\r\n  setStateQuery,\r\n  setDistrictQuery,\r\n  setChartDisplay,\r\n}) => {\r\n  const [input, setInput] = useState(\"Kerala\");\r\n  const [district, setDistrict] = useState(\"Select District\");\r\n  const [display, setDisplay] = useState(\"Kerala\");\r\n  useEffect(() => {\r\n    if (!loadApi) {\r\n      var stateCode = sList[input].statecode;\r\n      setStateQuery(stateCode);\r\n    }\r\n\r\n    setDistrictQuery(district);\r\n    if (district !== \"Select District\") setDisplay(district);\r\n    setChartDisplay(display);\r\n  }, [input, setStateQuery, district, setDistrictQuery, loadApi, load]);\r\n\r\n  return (\r\n    <div className=\"district\">\r\n      <div className=\"\">\r\n        <h2>Overview : {district === \"Select District\" ? input : district}</h2>\r\n      </div>\r\n      <div className=\"selectors\">\r\n        <div className=\"select\">\r\n          {loadApi ? (\r\n            \"\"\r\n          ) : (\r\n            <select\r\n              value={input}\r\n              onChange={(e) => {\r\n                setInput(e.target.value);\r\n                setDistrict(\"Select District\");\r\n                setDisplay(e.target.value);\r\n              }}\r\n            >\r\n              {Object.keys(sList).map((item) => {\r\n                if (item !== \"State Unassigned\") {\r\n                  return (\r\n                    <option key={item} value={item}>\r\n                      {item}\r\n                    </option>\r\n                  );\r\n                } else return \"\";\r\n              })}\r\n            </select>\r\n          )}\r\n        </div>\r\n        <div className=\"select\">\r\n          {load ? (\r\n            \"\"\r\n          ) : (\r\n            <select\r\n              value={district}\r\n              onChange={(e) => setDistrict(e.target.value)}\r\n            >\r\n              <option value=\"Select District\">Select District</option>\r\n              {Object.keys(dList).map((item) => {\r\n                if (item !== \"Other State\" && item !== \"Unknown\") {\r\n                  return (\r\n                    <option key={item} value={item}>\r\n                      {item}\r\n                    </option>\r\n                  );\r\n                } else {\r\n                  return \"\";\r\n                }\r\n              })}\r\n            </select>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default District;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Print.css\";\r\n// const request = require(\"request\");\r\n// const csv = require(\"csvtojson\");\r\n\r\nconst Print = ({ fullSData, load, selectedS, selectedD, Sdate, SdateData }) => {\r\n  const [stateData, setStateData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchItems = async () => {\r\n      var fullData = fullSData;\r\n      // const districtList = await fullData.districts;\r\n      // districtD(districtList);\r\n      var stateDateList = [];\r\n      var stateDateData = [];\r\n      if (selectedD === \"Select District\") {\r\n        var objState = fullData.dates;\r\n        // console.log(objState);\r\n        var lengthState = Object.keys(objState).length;\r\n        stateDateList = [];\r\n        stateDateData = [];\r\n        for (var i = lengthState - 7; i < lengthState; i++) {\r\n          stateDateList.push(Object.keys(objState)[i]);\r\n        }\r\n        stateDateList.map((fetchItem) =>\r\n          stateDateData.push(objState[fetchItem].delta)\r\n        );\r\n        Sdate([...stateDateList]);\r\n        SdateData([...stateDateData]);\r\n        // console.log(stateDateList);\r\n      } else {\r\n        var objDistrict = fullData.districts[selectedD].dates;\r\n        var lengthDistrict = Object.keys(objDistrict).length;\r\n        stateDateList = [];\r\n        stateDateData = [];\r\n        for (var j = lengthDistrict - 7; j < lengthDistrict; j++) {\r\n          stateDateList.push(Object.keys(objDistrict)[j]);\r\n        }\r\n        stateDateList.map((item) =>\r\n          stateDateData.push(objDistrict[item].delta)\r\n        );\r\n        Sdate([...stateDateList]);\r\n        SdateData([...stateDateData]);\r\n      }\r\n      var arrState = [\r\n        {\r\n          status: \"Confirmed\",\r\n          data: stateDateData[6].confirmed,\r\n          increase: stateDateData[6].confirmed - stateDateData[5].confirmed,\r\n          icon: \"fas fa-hospital-user\",\r\n        },\r\n\r\n        {\r\n          status: \"Recovered\",\r\n          data: stateDateData[6].recovered,\r\n          increase: stateDateData[6].recovered - stateDateData[5].recovered,\r\n          icon: \"bi bi-heart-fill\",\r\n        },\r\n        {\r\n          status: \"Deceased\",\r\n          data: stateDateData[6].deceased,\r\n          increase: stateDateData[6].deceased - stateDateData[5].deceased,\r\n          icon: \"bi bi-x-octagon-fill\",\r\n        },\r\n      ];\r\n      setStateData([...arrState]);\r\n    };\r\n    if (!load) fetchItems();\r\n  }, [selectedS, selectedD]);\r\n  return (\r\n    <div className=\"cards\">\r\n      {load\r\n        ? \"\"\r\n        : stateData.map((item, index) => {\r\n            var itemData = \"-\";\r\n            if (item.data !== undefined) {\r\n              itemData = item.data;\r\n            }\r\n            return (\r\n              <div className=\"card\" key={index}>\r\n                <div className=\"icon\">\r\n                  <i className={item.icon} style={{ color: \"#ffff\" }}></i>\r\n                </div>\r\n                <div>\r\n                  <h4>{item.status}</h4>\r\n                  <p>{itemData}</p>\r\n                  <br />\r\n                  <p>{itemData === \"-\" ? \"-\" : item.increase}</p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Print;\r\n","import React from \"react\";\r\nimport { Line, Doughnut } from \"react-chartjs-2\";\r\nimport \"./LineChart.css\";\r\nconst LineChart = ({ stateD, stateDateD, dData, title }) => {\r\n  var Confirmed = [];\r\n  var Recovered = [];\r\n  var DistrictName = [];\r\n  var DistrictValue = [];\r\n  var dataDistrict = [];\r\n  Object.keys(dData).map((item) => {\r\n    if (item !== \"Unknown\") {\r\n      var lengthDistrict = Object.keys(dData[item].dates).length;\r\n      var districtDate = Object.keys(dData[item].dates)[lengthDistrict - 1];\r\n      dataDistrict.push({\r\n        name: item,\r\n        value: dData[item].dates[districtDate].delta.confirmed,\r\n      });\r\n    }\r\n  });\r\n  dataDistrict.sort((a, b) => {\r\n    return b.value - a.value;\r\n  });\r\n  console.log(dataDistrict);\r\n  for (var j = 0; j < 5; j++) {\r\n    if (dataDistrict[j] !== undefined) {\r\n      DistrictName.push(dataDistrict[j].name);\r\n      DistrictValue.push(dataDistrict[j].value);\r\n    }\r\n  }\r\n  stateDateD.map((item) => {\r\n    if (item !== undefined) {\r\n      if (\"confirmed\" in item) Confirmed.push(item.confirmed);\r\n      if (\"recovered\" in item) Recovered.push(item.recovered);\r\n    }\r\n  });\r\n  const data = {\r\n    labels: [...stateD],\r\n    datasets: [\r\n      {\r\n        label: \"Confirmed\",\r\n        data: Confirmed,\r\n        fill: false,\r\n        borderColor: \"rgb(255, 7, 58)\",\r\n        backgroundColor: \"rgb(255, 7, 58)\",\r\n        tension: 0.1,\r\n      },\r\n      {\r\n        label: \"Recovered\",\r\n        data: Recovered,\r\n        fill: false,\r\n        borderColor: \"rgb(40, 167, 69)\",\r\n        backgroundColor: \"rgb(40, 167, 69)\",\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  };\r\n  const dataDoughnut = {\r\n    labels: DistrictName,\r\n    datasets: [\r\n      {\r\n        label: \"My First Dataset\",\r\n        data: DistrictValue,\r\n        backgroundColor: [\r\n          \"rgb(218,25,83)\",\r\n          \"rgb(15,189,168)\",\r\n          \"rgb(254,184,92)\",\r\n          \"rgb(100,138,225)\",\r\n          \"rgb(108, 117, 125)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgb(218,25,83)\",\r\n          \"rgb(15,189,168)\",\r\n          \"rgb(254,184,92)\",\r\n          \"rgb(100,138,225)\",\r\n          \"rgb(108, 117, 125)\",\r\n        ],\r\n        hoverOffset: 4,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div className=\"LineChart\">\r\n      <div className=\"chart\">\r\n        <Line\r\n          data={data}\r\n          height={300}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n            plugins: {\r\n              title: {\r\n                display: true,\r\n                align: \"start\",\r\n                text: `Cumulative Summary of ${title}`,\r\n                color: \"#ffff\",\r\n                font: {\r\n                  size: 21,\r\n                  weight: \"normal\",\r\n                },\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"coffee\">\r\n        <div className=\"pie\">\r\n          <Doughnut\r\n            data={dataDoughnut}\r\n            height={100}\r\n            options={{\r\n              maintainAspectRatio: false,\r\n              plugins: {\r\n                title: {\r\n                  display: true,\r\n                  align: \"start\",\r\n                  text: `Top districts(confirmed) `,\r\n                  color: \"#ffff\",\r\n                  font: {\r\n                    size: 21,\r\n                    weight: \"normal\",\r\n                  },\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport District from \"./components/District\";\nimport Print from \"./components/Print\";\nimport Chart from \"./components/LineChart\";\nimport axios from \"axios\";\nfunction App() {\n  const [statesData, setStatesData] = useState({});\n  const [fullStateData, setFullStateData] = useState({});\n  const [districtData, setDistrictData] = useState({});\n  const [selectedState, setSelectedState] = useState(\"KL\");\n  const [selectedDistrict, setSelectedDistrict] = useState(\"Select District\");\n  const [stateDateList, setStateDateList] = useState([]);\n  const [stateDateData, setStateDateData] = useState([]);\n  const [display, setDisplay] = useState(\"Kerala\");\n  const [loading, setLoading] = useState(true);\n  const [apiLoading, setApiLoading] = useState(true);\n  useEffect(() => {\n    const fetchItems = async () => {\n      setApiLoading(true);\n      const responseApi1 = await axios.get(\n        \"https://api.covid19india.org/state_district_wise.json\"\n      );\n      await setStatesData(responseApi1.data);\n      setApiLoading(false);\n    };\n    fetchItems();\n  }, []);\n  useEffect(() => {\n    const fetchItems = async () => {\n      setLoading(true);\n      const responseApi2 = await axios.get(\n        `https://api.covid19india.org/v4/min/timeseries-${selectedState}.min.json`\n      );\n      const districtList = await responseApi2.data[selectedState].districts;\n      // console.log(responseApi2.data.selectedState);\n      await setDistrictData(districtList);\n      await setFullStateData(responseApi2.data[selectedState]);\n      setTimeout(() => {\n        setLoading(false);\n      }, 1000);\n    };\n    fetchItems();\n  }, [selectedState]);\n  return (\n    <div className=\"App\">\n      <Nav />\n      <div className=\"overview\">\n        <District\n          sList={statesData}\n          dList={districtData}\n          load={loading}\n          loadApi={apiLoading}\n          setStateQuery={(q) => setSelectedState(q)}\n          setDistrictQuery={(d) => setSelectedDistrict(d)}\n          setChartDisplay={(data) => setDisplay(data)}\n        />\n        {!loading ? (\n          <>\n            <Print\n              load={loading}\n              selectedS={selectedState}\n              selectedD={selectedDistrict}\n              fullSData={fullStateData}\n              Sdate={(d) => setStateDateList(d)}\n              SdateData={(data) => setStateDateData(data)}\n              // districtD={(dd) => setDistrictData(dd)}\n            />\n            <Chart\n              dData={districtData}\n              stateD={stateDateList}\n              stateDateD={stateDateData}\n              title={display}\n            />\n          </>\n        ) : (\n          <div class=\"bars-1\"></div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}